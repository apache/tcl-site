# -----------------------------------------------------------------------------
# ws32html.ws3 -- format websh source code for webpage
# nca-115-2
# $Id$
# -----------------------------------------------------------------------------

set _keyWords {
web::put
web::putx
web::msgflag
web::putxfile
web::sessioncontextfactory
web::readfile
web::encrypt
web::truncatefile
web::config
web::recv
web::dispatch
web::encryptd
web::param
web::lockfile
web::formvar
web::list2uri
web::cmdurlcfg
web::interpclasscfg
web::unlockfile
web::htmlify
web::match
web::context
web::maineval
web::decryptd
web::cmdurl
web::command
web::filecounter
web::finalize
web::decrypt
web::finalizer
web::uri2list
web::response
web::uridecode
web::tempfile
web::request
web::send
web::logdest
web::include
web::cryptdkey
web::getcommand
web::logfilter
web::log
web::interpcfg
web::initializer
web::filecontext
web::uriencode
web::dehtmlify
web::cookiecontext
web::interp
web::interpmap
web::interpclasscfg
    \w*::cset \w*::cget \w*::carray \w*::init \w*::new
    after append array auto_execo  auto_load auto_mkindex
    auto_reset bgerror binary break case catch cd clock close concat continue
    default else elseif eof error eval exec exit expr fblocked fconfigure
    fcopy file fileevent filename flush for foreach format
    gets glob global history http
    if incr info interp join
    lappend lindex linsert llength lrange lreplace lsearch lsort
    library list load
    memory namespace open optproc
    package parray pid pkg_mkIndex proc puts pwd
    read regexp registry regsub rename resource return
    safe scan seek set socket source split string subst switch
    tell then time trace variable
}

array set _fmt {
    cmt	        {<font color="#800000">}
    /cmt	</font>
    proc	<b>
    /proc	</b>
    str		{<font color="#008000">}
    /str	</font>
    var		{<font color="#000080">}
    /var	</font>
}

# ----------------------------------------------------------------------------
# command line
# ----------------------------------------------------------------------------
if {$argc > 0 } {
    set fn [lindex $argv 0]
} else {
    puts stderr "fontifyws3.tcl --- usage: TBD"
    exit 1
}
set fh [open $fn "r"]

puts {<pre>}

while {[eof $fh] == 0} {

    set curLine [gets $fh]

    ## comment ?
    if { [regexp {^(\s*)#} $curLine] } {

	puts "$_fmt(cmt)[web::htmlify -- $curLine]$_fmt(/cmt)"

    } else {

        ## strings (simplistic)
        set str  {([^\"]*)\"([^\"]*)\"(.*)}
        if {[regexp $str $curLine]} {
            set rest $curLine
            set curLine ""
            while {[regexp $str $rest dum pre tmp rest]} {
		
		# puts "DBG rest: $rest"

                append curLine [web::htmlify $pre]$_fmt(str)[web::htmlify -- \"$tmp\"]$_fmt(/str)

            }

	    if { [string length $rest] } {
		append curLine $rest
	    }
        } else {
            
            set curLine [web::htmlify -- $curLine]
        }
        
        ## commands 
        set cmds (^|\[\[\{\"\;\s\])([join $_keyWords |])(\[^a-z0-9\]|$)
        regsub -all $cmds $curLine \\1$_fmt(proc)\\2$_fmt(/proc)\\3 curLine

        set cmds (|\[\[\{\"\;\s\])([join $_keyWords |])(\[^a-z0-9\]|)
        regsub -all $cmds $curLine \\1$_fmt(proc)\\2$_fmt(/proc)\\3 curLine

        ## vars
        set var  {(^|[^\\])(\$\{[^\}]*\}|\$[a-z0-9_]+(\([^\)]*\))?)}
        regsub -nocase -all $var $curLine \\1$_fmt(var)\\2$_fmt(/var) curLine

 	puts "$curLine"
    }
}

puts {</pre>}
